package org.noear.solon.core;

/**
 * 事务策略
 *
 * 事务组下属的任何事务，都可以try+catch处理而不影响整体事务
 * */
public enum TranPolicy {
    /**
     * 必须
     *
     * 1.如果当前存在同源事务则并入，且不主动提交事务；
     * 2.否则新建事务，且会主动提交事务；
     * 3.如果存在根事务组，则加入事务组；
     */
    required(1),

    /**
     * 必须新起一个事务；但不加入事务组；
     *
     * 1.且不加入根事务组；可与上级事务回滚隔离
     */
    requires_new(2),

    /**
     * 必须新起一个事务；且加入事务组；
     *
     * 1.如果上级为事务组，则加入
     * */
    nested(3),

    /**
     * 支持但不必须
     * <p>
     * 1.如果当前存在同源事务则并入，且不主动提交；
     * 2.否则不使用事务；
     */
    supports(4),

    /**
     * 排除，当前有事务则挂起
     */
    exclude(5),

    /**
     * 当前必须要有
     *
     * 1.如果当前存在同源事务则并入, 且不主动提交;
     * 2.否则出异常
     * */
    mandatory(6),

    /**
     * 决不，当前有事务则异常
     */
    never(7);

    public final int code;

    TranPolicy(int code) {
        this.code = code;
    }
}
